function sim_both

addpath '../utils';
addpath '../blr';


loopVars.tasks                        	= 50;   %number of tasks (subjects for trajectory modeling)   
loopVars.observationNoises            	= 1;    %measurement noise standard deviation
loopVars.biomarkerNoises             	= 1;    %biomarker noise standard deviation
loopVars.numRngs                      	= 10;   %number of simulation runs, each a random sampling of trajectories
 
saveFilename_int                           = '..\out_blr_sim\intercept.mat';

[metrics_intercept, model_names_int,    loopVars]    = loopParams(saveFilename, loopVars, @generatePredictionStructure_intercepts, 'intercept');

saveFilename                            = '..\out_blr_sim\slope.mat';
[metrics_slope,     model_names_slope,  loopVars]    = loopParams(saveFilename, loopVars, @generatePredictionStructure_slopes, 'slope');

assert(isequal(model_names_int, model_names_slope));

createCoverageFratioFig(loopVars, metrics_intercept, metrics_slope, model_names);
