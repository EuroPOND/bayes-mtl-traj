function sim_both_quick

addpath '../utils';
addpath '../blr';

loopVars.tasks                        	= 50;   %number of tasks (subjects for trajectory modeling)   
loopVars.observationNoises            	= [1 2 4 8];    %measurement noise standard deviation
loopVars.biomarkerNoises             	= 1;    %biomarker noise standard deviation
loopVars.numRngs                      	= 30;   %number of simulation runs, each a random sampling of trajectories
 
[metrics_intercept, model_names_int,    loopVars]    = loopParams(loopVars, @generatePredictionStructure_intercepts, 'intercept');
[metrics_slope,     model_names_slope,  loopVars]    = loopParams(loopVars, @generatePredictionStructure_slopes,     'slope');

assert(isequal(model_names_int, model_names_slope));
model_names                             = model_names_int;

createCoverageFratioFig(loopVars, metrics_intercept, metrics_slope, model_names);
